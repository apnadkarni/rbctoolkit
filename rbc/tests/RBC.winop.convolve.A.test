# RBC.winop.convolve.A.test --
#
###Abstract
# This file contains the automatic tests that test the convolve 
# function of the winop BLT component.
#
###Copyright
# See the file "license.terms" for information on usage and
# redistribution of this file, and for a DISCLAIMER OF ALL WARRANTIES.
#
###Revision String
# SVN: $Id$

###Package Definition
package provide winop.convolve

package require rbc
namespace import rbc::*

package require tcltest
namespace import tcltest::*
namespace eval winop.convolve {
	# ------------------------------------------------------------------------------------
	# Purpose: Ensure the convolve command works properly when given character input.
	# ------------------------------------------------------------------------------------ 
	test RBC.winop.convolve.A.1.1 {
	    winop convolve: character input
	} -setup {
	    graph .graph1
	    pack .graph1
		set src [image create photo -file [file join [file dirname [info script]] sample.gif]]
		set dest [image create photo]
	} -body {
	    if {[catch {winop convolve $src $dest one}]} {
			return 0
	    } else {
			return 1
	    }
	} -cleanup {
		image delete $src
		image delete $dest
	    destroy .graph1
	} -result {0}
	
	# ------------------------------------------------------------------------------------
	# Purpose: Ensure the convolve command works properly when given a non-square kernel.
	# ------------------------------------------------------------------------------------ 
	test RBC.winop.convolve.A.2.1 {
	    winop convolve: non-square kernel
	} -setup {
	    graph .graph1
	    pack .graph1
		set src [image create photo -file [file join [file dirname [info script]] sample.gif]]
		set dest [image create photo]
	} -body {
	    if {[catch {winop convolve $src $dest {-2 -1 0 -1 1 1 0}}]} {
			return 0
	    } else {
			return 1
	    }
	} -cleanup {
		image delete $src
		image delete $dest
	    destroy .graph1
	} -result {0}
	
	# ------------------------------------------------------------------------------------
	# Purpose: Ensure the convolve command works properly when given a non-existent Tk
	# photo as the source image.
	# ------------------------------------------------------------------------------------ 
	test RBC.winop.convolve.A.3.1 {
	    winop convolve: non-existent Tk photo source
	} -setup {
		set dest [image create photo -file [file join [file dirname [info script]] sample.gif]]
	} -body {
	    if {[catch {winop convolve $src $dest {-2 -1 0 -1 1 1 0 1 2}}]} {
			return 0
	    } else {
			return 1
	    }
	} -cleanup {
		image delete $dest
	} -result {0}
	
	# ------------------------------------------------------------------------------------
	# Purpose: Ensure the convolve command works properly when given a non-existent Tk
	# photo as the destination image.
	# ------------------------------------------------------------------------------------ 
	test RBC.winop.convolve.A.3.2 {
	    winop convolve: non-existent Tk photo destination
	} -setup {
		set src [image create photo -file [file join [file dirname [info script]] sample.gif]]
	} -body {
	    if {[catch {winop convolve $src $dest {-2 -1 0 -1 1 1 0 1 2}}]} {
			return 0
	    } else {
			return 1
	    }
	} -cleanup {
		image delete $src
	} -result {0}
	
	# ------------------------------------------------------------------------------------
	# Purpose: Ensure the convolve command works properly when given a kernel that is not
	# in a list.
	# ------------------------------------------------------------------------------------ 
	test RBC.winop.convolve.A.4.1 {
	    winop convolve: non-list kernel
	} -setup {
	    graph .graph1
	    pack .graph1
		set src [image create photo -file [file join [file dirname [info script]] sample.gif]]
		set dest [image create photo]
	} -body {
	    if {[catch {winop convolve $src $dest -2 -1 0 -1 1 1 0 1 2}]} {
			return 0
	    } else {
			return 1
	    }
	} -cleanup {
		image delete $src
		image delete $dest
	    destroy .graph1
	} -result {0}
	
	cleanupTests
}
